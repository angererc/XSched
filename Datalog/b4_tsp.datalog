.include "basedir.include"

### Domains
A 32
.include "Object.dom"
.include "Method.dom"
.include "ParamPosition.dom"

roots					(method:Method)											output
scoped_schedule(m:Method, a:A, obj:Object)										output printsize
scoped_actual(m:Method, a:A, n:ParamPosition, b:A)								output
scoped_formal(m:Method, n:ParamPosition, a:A)									output
scoped_arrow(m:Method, lhs:A, rhs:A)											output
scoped_ordered(m:Method, a:A)													output
scoped_multiple(m:Method, a:A)													output

roots("< Application, Lerco/activations/tsp/Tsp, main([Ljava/lang/String;)V >").

#dummies to shut up bddbddb
scoped_actual(0,0,0,0).
scoped_formal(0,0,0).
scoped_ordered(0,0).
scoped_arrow(0, 0, 0).

#Tsp.solve()
scoped_schedule("< Application, Lerco/activations/tsp/Tsp, solve(Ljava/lang/String;)Lerco/activations/tsp/Tsp$Result; >", 0, "< Application, Lerco/activations/tsp/Tsp, solve(Ljava/lang/String;)Lerco/activations/tsp/Tsp$Result; > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@37").

#Tsp.run()
scoped_schedule("< Application, Lerco/activations/tsp/TspSolver, run()V >", 0, "< Application, Lerco/activations/tsp/TspSolver, splitTour(Lerco/activations/tsp/TourElement;)V > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@180").
scoped_multiple("< Application, Lerco/activations/tsp/TspSolver, run()V >", 0).