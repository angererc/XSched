.basedir "test_out"

## Domains
T 27 tasks.map
A 10 activations.map
S 10 scopes.map
N 5

.include "../schedule_analysis.core"

#dummies to fill the empty database
formal0("<dummy>", 0, 0).
actual0("<dummy>", 0, 0, 0).

#****************************
#test scopes and transitivity
#****************************

subscope0("X", "top", "s1").
subscope0("X", "top", "s1").
subscope0("X", "s1", "s2").
subscope0("X", "s1", "s3").
subscope0("X", "top", "s4").

#assertions
ERR 256
error3(num:ERR) outputtuples

error3(0) :- !subscope("X", "top", "s1").
error3(1) :- !subscope("X", "top", "s2").
error3(2) :- !subscope("X", "top", "s3").
error3(3) :- !subscope("X", "top", "s4").
error3(4) :- !subscope("X", "s1", "s2").
error3(5) :- !subscope("X", "s1", "s3").
# negative tests:
error3(6) :- subscope("X", "s1", "s4").
error3(7) :- subscope("X", "s4", "s1").
error3(8) :- subscope("X", "s2", "s3").
error3(9) :- subscope("X", "s1", "top").
error3(10) :- subscope("X", "s2", "top").
error3(11) :- subscope("X", "s3", "top").
error3(12) :- subscope("X", "s4", "top").
error3(13) :- subscope("X", "s2", "s1").
error3(14) :- subscope("X", "s3", "s1").

## test simple transitivity in same scope
schedules0("X", "top", "a1", "A").
schedules0("X", "top", "a2", "A").
schedules0("X", "top", "a3", "A").
arrow0("X", "a1", "a2").
arrow0("X", "a2", "a3").
error3(15) :- !orderedBefore("X", "a1", "a3").

#don't allow transitive edges via nodes that are in sub-scopes
schedules0("X", "top", "a4", "A").
schedules0("X", "s1", "a5", "A").
schedules0("X", "top", "a6", "A").
arrow0("X", "a4", "a5").
arrow0("X", "a5", "a6").
error3(16) :- !orderedBefore("X", "a4", "a5").
error3(17) :- !orderedBefore("X", "a5", "a6").
error3(18) :- orderedBefore("X", "a4", "a6").

#do allow transitive edges into sub-scopes
schedules0("X", "top", "a7", "A").
schedules0("X", "s1", "a8", "A").
schedules0("X", "s3", "a9", "A").
arrow0("X", "a7", "a8").
arrow0("X", "a8", "a9").
error3(19) :- !orderedBefore("X", "a7", "a9").
