.include "basedir.include"

### Domains
A 32
.include "Object.dom"
.include "Method.dom"
.include "ParamPosition.dom"

roots					(method:Method)											output
scoped_schedule(m:Method, a:A, obj:Object)										output printsize
scoped_actual(m:Method, a:A, n:ParamPosition, b:A)								output
scoped_formal(m:Method, n:ParamPosition, a:A)									output
scoped_arrow(m:Method, lhs:A, rhs:A)											output
scoped_ordered(m:Method, a:A)													output
scoped_multiple(m:Method, a:A)													output

roots("< Application, Lerco/activations/hedc/Tester, main([Ljava/lang/String;)V >").

#dummies to shut up bddbddb
scoped_actual(0,0,0,0).
scoped_formal(0,0,0).
scoped_ordered(0,0).

#Tester.main
scoped_schedule("< Application, Lerco/activations/hedc/Tester, main([Ljava/lang/String;)V >", 0, "< Application, Lerco/activations/hedc/Tester, main([Ljava/lang/String;)V > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@41").

#Driver.begin
scoped_schedule("< Application, Lerco/activations/hedc/Tester$Driver, begin()V >", 0, "< Application, Lerco/activations/hedc/Tester$Driver, begin()V > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@7").
scoped_schedule("< Application, Lerco/activations/hedc/Tester$Driver, begin()V >", 1, "< Application, Lerco/activations/hedc/Tester$Driver, begin()V > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@74").
scoped_multiple("< Application, Lerco/activations/hedc/Tester$Driver, begin()V >", 1).
scoped_ordered("< Application, Lerco/activations/hedc/Tester$Driver, begin()V >", 1).
scoped_arrow("< Application, Lerco/activations/hedc/Tester$Driver, begin()V >", 1, 0).
scoped_actual("< Application, Lerco/activations/hedc/Tester$Driver, begin()V >", 1, 0, 0).

#Tester.run
scoped_formal("< Application, Lerco/activations/hedc/Tester, run(Lxsched/Activation;)V >", 0, 0).
scoped_schedule("< Application, Lerco/activations/hedc/Tester, run(Lxsched/Activation;)V >", 1, "< Application, Lerco/activations/hedc/Tester, run(Lxsched/Activation;)V > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@17").
scoped_actual("< Application, Lerco/activations/hedc/Tester, run(Lxsched/Activation;)V >", 1, 0, 0).

#Tester.iteration
scoped_formal("< Application, Lerco/activations/hedc/Tester, iteration(Lxsched/Activation;)V >", 0, 0).
scoped_schedule("< Application, Lerco/activations/hedc/Tester, iteration(Lxsched/Activation;)V >", 1, "< Application, Lerco/activations/hedc/Tester, iteration(Lxsched/Activation;)V > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@142").
scoped_schedule("< Application, Lerco/activations/hedc/Tester, iteration(Lxsched/Activation;)V >", 2, "< Application, Lerco/activations/hedc/Tester, iteration(Lxsched/Activation;)V > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@159").
scoped_schedule("< Application, Lerco/activations/hedc/Tester, iteration(Lxsched/Activation;)V >", 3, "< Application, Lerco/activations/hedc/Tester, iteration(Lxsched/Activation;)V > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@175").
scoped_arrow("< Application, Lerco/activations/hedc/Tester, iteration(Lxsched/Activation;)V >", 1, 2).
scoped_arrow("< Application, Lerco/activations/hedc/Tester, iteration(Lxsched/Activation;)V >", 2, 3).
scoped_arrow("< Application, Lerco/activations/hedc/Tester, iteration(Lxsched/Activation;)V >", 3, 0).
scoped_actual("< Application, Lerco/activations/hedc/Tester, iteration(Lxsched/Activation;)V >", 3, 0, 0).

#MetaSearchRequest.go

	#metasearchimpl.search(2) schedules later = MSI.search3
	scoped_schedule("< Application, Lerco/activations/hedc/MetaSearchRequest, go()V >", 0, "< Application, Lerco/activations/hedc/MetaSearchImpl, search(Ljava/util/Hashtable;Lerco/activations/hedc/MetaSearchRequest;)Lxsched/Activation; > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@81").
	#metasearchimpl.search(2) schedules multiple tasks = Task.run
	scoped_schedule("< Application, Lerco/activations/hedc/MetaSearchRequest, go()V >", 1, "< Application, Lerco/activations/hedc/MetaSearchImpl, search(Ljava/util/Hashtable;Lerco/activations/hedc/MetaSearchRequest;)Lxsched/Activation; > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@161").
	#metasearchimpl.search(3) schedules msi.search_2
	scoped_schedule("< Application, Lerco/activations/hedc/MetaSearchRequest, go()V >", 2, "< Application, Lerco/activations/hedc/MetaSearchImpl, search(Ljava/util/Hashtable;Ljava/io/Writer;Lerco/activations/hedc/MetaSearchRequest;)Lxsched/Activation; > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@32").
	#writeback 1, go_2
	scoped_schedule("< Application, Lerco/activations/hedc/MetaSearchRequest, go()V >", 3, "< Application, Lerco/activations/hedc/MetaSearchRequest, go()V > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@35").
	#writeback 2, go_3
	scoped_schedule("< Application, Lerco/activations/hedc/MetaSearchRequest, go()V >", 4, "< Application, Lerco/activations/hedc/MetaSearchRequest, go()V > -> invokestatic < Application, Lxsched/Activation, schedule(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Lxsched/Activation; >@71").

#case 1
scoped_arrow("< Application, Lerco/activations/hedc/MetaSearchRequest, go()V >", 0, 2).
scoped_arrow("< Application, Lerco/activations/hedc/MetaSearchRequest, go()V >", 2, 3).
#the effect of the "if"
scoped_arrow("< Application, Lerco/activations/hedc/MetaSearchRequest, go()V >", 3, 4).
#case 2
scoped_multiple("< Application, Lerco/activations/hedc/MetaSearchRequest, go()V >", 1).
scoped_arrow("< Application, Lerco/activations/hedc/MetaSearchRequest, go()V >", 1, 0).
scoped_arrow("< Application, Lerco/activations/hedc/MetaSearchRequest, go()V >", 0, 4).
