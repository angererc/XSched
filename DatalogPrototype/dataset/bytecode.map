Example1.process(Object): $r2.<Activation: java.lang.Object result> = $r3;
!!in MethodReturn Example1.process(Object): return;
!!in Formal Example1.write(Activation): r0 := @this: Example1;
!!in Formal Example1.write(Activation): r1 := @parameter0: Activation;
Example1.write(Activation): $r2 = r0.<Example1: java.util.Vector out>;
Example1.write(Activation): $r3 = r1.<Activation: java.lang.Object result>;
Example1.write(Activation): r2.elements += $r3
!!in methodReturn Example1.write(Activation): return;
!!in Formal Example1:writeToOut(Vector): r0 := @this: Example1;
!!in Formal Example1:writeToOut(Vector): r1 := @parameter0: java.util.Vector;
!!in Assign0 Example1:writeToOut(Vector): r2 = @now;
!!in Assign0 Example1:writeToOut(Vector): r3 = @now;
Example1:writeToOut(Vector): label0:
!!in Assign0 Example1:writeToOut(Vector): r2_1 = Phi(r2, r2_2);
!!in Assign0 Example1:writeToOut(Vector): r3_1 = Phi(r3, r3_2);
Example1:writeToOut(Vector): $z0 = //has next, true or false
Example1:writeToOut(Vector): if $z0 == 0 goto label1;
Example1:writeToOut(Vector): r5 = oneOf r1.elements
Example1:writeToOut(Vector): r6 = sched r0.process(r5);
Example1:writeToOut(Vector): r7 = sched r0.write(r6);
Example1:writeToOut(Vector): r2_1 -> r6;
Example1:writeToOut(Vector): r6 -> r7;
Example1:writeToOut(Vector): r3_1 -> r7;
!!in Assign0 Example1:writeToOut(Vector): r2_2 = r6;
!!in Assign0 Example1:writeToOut(Vector): r3_2 = r7;
Example1:writeToOut(Vector): goto label0;
Example1:writeToOut(Vector): label1:
!!in MethodRet Example1:writeToOut(Vector): return;
before